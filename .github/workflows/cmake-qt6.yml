name: CMake-Qt6

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Checkout main repository
      uses: actions/checkout@v3

    # extra-cmake-modules are needed for building html documentation
    - name: Check out extra-cmake-modules
      uses: actions/checkout@v2
      with:
        repository: KDE/extra-cmake-modules
        path: external/extra-cmake-modules
        ref: 'v6.12.0'

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # Install Qt crashes that it does not have bdist_wheel available, this fixes it
    - name: Update python tools
      run: |
        python -m pip install --upgrade pip setuptools wheel

    # https://github.com/jurplel/install-qt-action
    # https://ddalcino.github.io/aqt-list-server/
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.3'
        host: 'linux'
        target: 'desktop'
        arch: 'linux_gcc_64'
        archives: 'qttools qtdeclarative qtbase icu'

    - name: Install extra-cmake-modules
      run: |
        cd external/extra-cmake-modules
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        sudo cmake --build build --target install

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TESTING=ON -DBUILD_DOCS=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Generate docs
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target generate_docs

    - name: Upload docs artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{github.workspace}}/build/.doc/sortfilterproxymodel

  deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/deploy-pages@v4
